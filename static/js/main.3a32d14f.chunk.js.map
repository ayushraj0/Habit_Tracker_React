{"version":3,"sources":["redux/features/habitSlice.js","components/Habit.js","components/Habits.js","components/Navbar.js","components/Home.js","components/DayView.js","components/WeekView.js","components/App.js","redux/store.js","index.js"],"names":["id","habitSlice","createSlice","name","initialState","reducers","addHabit","state","action","today","Date","day","getDate","getDay","month","getMonth","year","getFullYear","habit","payload","weekLog","dd","mm","yyyy","isDone","concat","_toConsumableArray","deleteHabit","filter","habitDone","tempHabits","i","length","Number","localStorage","getItem","habitUnDone","habitNone","_habitSlice$actions","actions","Habit","_ref","todayDay","countDone","navigate","useNavigate","dispatch","useDispatch","React","createElement","className","style","textTransform","onClick","setItem","alert","Habits","habitsState","useSelector","map","key","Navbar","_useState","useState","_useState2","_slicedToArray","hour","setHour","useEffect","date","getHours","Fragment","data-bs-toggle","data-bs-target","data-bs-backdrop","data-bs-keyboard","tabIndex","aria-labelledby","aria-hidden","htmlFor","type","placeholder","autoComplete","data-bs-dismiss","habitName","document","getElementById","value","Home","DayView","WeekView","habits","index","Link","to","App","Routes","Route","path","element","store","configureStore","reducer","habitReducer","ReactDOM","createRoot","render","StrictMode","Router","Provider"],"mappings":"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","file":"static/js/main.3a32d14f.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nlet id = 1;\n\n\nexport const habitSlice = createSlice({\n  name: \"habits\",\n  initialState: [],\n  reducers: {\n    addHabit: (state, action) => {\n      const today=new Date();\n      let day=today.getDate()-today.getDay();\n      const month= today.getMonth();\n      const year =today.getFullYear();\n\n      const habit = {\n        id: id++,\n        name: action.payload,\n        weekLog: [\n          {\n            id: 0,\n            day: \"Sunday\",\n            dd:day,\n            mm:month,\n            yyyy:year,\n            isDone: \"\",\n          },\n          {\n            id: 1,\n            day: \"Monday\",\n            dd:day+1,\n            mm:month,\n            yyyy:year,\n            isDone: \"\",\n          },\n          {\n            id: 2,\n            day: \"Tuesday\",\n            dd:day+2,\n            mm:month,\n            yyyy:year,\n            isDone: \"\",\n          },\n          {\n            id: 3,\n            day: \"Wednesday\",\n            dd:day+3,\n            mm:month,\n            yyyy:year,\n            isDone: \"\",\n          },\n          {\n            id: 4,\n            day: \"Thursday\",\n            dd:day+4,\n            mm:month,\n            yyyy:year,\n            isDone: \"\",\n          },\n          {\n            id: 5,\n            day: \"Friday\",\n            dd:day+5,\n            mm:month,\n            yyyy:year,\n            isDone: \"\",\n          },\n          {\n            id: 6,\n            day: \"Saturday\",\n            dd:day+6,\n            mm:month,\n            yyyy:year,\n            isDone: \"\",\n          },\n        ],\n      };\n      const tempHabits = [...state, habit];\n      return tempHabits;\n    },\n\n    deleteHabit: (state, action) => {\n      const tempHabits = state.filter((habit) => habit.id !== action.payload);\n      return tempHabits;\n    },\n    habitDone: (state, action) => {\n      let tempHabits = state;\n      for (let i = 0; i < tempHabits.length; i++) {\n        if (tempHabits[i].id === Number(localStorage.getItem(\"id\"))) {\n          tempHabits[i].weekLog[action.payload].isDone=true;\n        }\n      }\n      return tempHabits;\n    },\n    habitUnDone: (state, action) => {\n      let tempHabits = state;\n      for (let i = 0; i < tempHabits.length; i++) {\n        if (tempHabits[i].id === Number(localStorage.getItem(\"id\"))) {\n          tempHabits[i].weekLog[action.payload].isDone=false;\n        }\n      }\n      return tempHabits;\n    },\n    habitNone: (state, action) => {\n      let tempHabits = state;\n      for (let i = 0; i < tempHabits.length; i++) {\n        if (tempHabits[i].id === Number(localStorage.getItem(\"id\"))) {\n          tempHabits[i].weekLog[action.payload].isDone=\"\";\n        }\n      }\n      return tempHabits;\n  },\n}});\n\n// Action creators are generated for each case reducer function\nexport const { addHabit, deleteHabit,habitDone,habitUnDone,habitNone } = habitSlice.actions;\n\nexport default habitSlice.reducer;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteHabit } from \"../redux/features/habitSlice\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Habit = ({habit}) => {\n  const today=new Date();\n  const todayDay=today.getDay();\n  let countDone=0;\n  //loop for getting habit done count\n  for (let i = 0; i < habit.weekLog.length; i++) {\n    if(habit.weekLog[i].isDone===true){\n      countDone++;\n    }\n  }\n  \n  // call use navigate hook from react-router-dom in a navigate variable \n  const navigate=useNavigate();\n\n  // call use dispatch hook a variable call dispatch\n  const dispatch=useDispatch();\n\n  // function call after click delete button on habit list\n  const handleDelete=()=>{\n    dispatch(deleteHabit(habit.id));\n    alert(\"your habit deleted successfully\")\n  }\n\n  // this function call after click week view button\n  // this function used for set current habit id to local storage and navigate to week view page\n  const setId=()=>{\n    localStorage.setItem(\"id\",habit.id)\n    navigate(\"/week-view\");\n  }\n\n  \n  return (\n    <div className=\"habit\">\n      <div className=\"habit-left\">\n        <i className=\"fa-solid fa-hashtag\"></i>\n        <div>\n          <h4 style={{textTransform:\"capitalize\"}}>{habit.name}</h4>\n          <p className=\"day-complete\">{countDone}/{todayDay+1} days</p>\n        </div>\n      </div>\n      <div className=\"habit-right\">\n        <div className=\"log-btn\" onClick={setId}>\n          <i className=\"fa-solid fa-calendar-week\" ></i>\n          Week View\n        </div>\n        <i className=\"fa-solid fa-trash\" onClick={handleDelete}></i>\n      </div>\n    </div>\n  );\n};\n\nexport default Habit;\n","import React from 'react'\nimport Habit from './Habit'\nimport { useSelector } from \"react-redux\";\n\nconst Habits = () => {\n\n  // call use selector hook for getting state from reducer\n  let habitsState=useSelector((state)=>state[\"habits\"])\n  \n  return (\n    <div className='habits'>\n      {habitsState.map((habit)=><Habit habit={habit} key={habit.id}/>)}\n    </div>\n  )\n}\n\nexport default Habits\n","import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addHabit } from \"../redux/features/habitSlice\";\n\nconst Navbar = ({ name }) => {\n  // call use dispatch hook a variable call dispatch\n  const dispatch=useDispatch();\n\n  // change state according time\n  const [hour, setHour] = useState(0);\n  useEffect(() => {\n    const date = new Date();\n    setHour(date.getHours());\n  }, []);\n  \n  // function for add habit \n  const handleSave=()=>{\n    const habitName=document.getElementById(\"habitName\").value;\n    dispatch(addHabit(habitName));\n    alert(\"Your habit added successfully\");\n    document.getElementById(\"habitName\").value=\"\";\n  }\n\n  return (\n    <>\n      <div className=\"navbar\">\n        <h3 className=\"daytime\">\n          {/* according to time its shows morning,afternoon,evening and night */}\n          {hour <= 12\n            ? \"Morning\"\n            : hour <= 17\n            ? \"Afternoon\"\n            : hour <= 21\n            ? \"Evening\"\n            : \"Night\"}\n        </h3>\n        <div className=\"right-nav\">\n          <h5>{name}</h5>\n          <button\n            className=\"add-habit-btn\"\n            data-bs-toggle=\"modal\"\n            data-bs-target=\"#staticBackdrop\"\n          >\n            <i className=\"fa-solid fa-plus\"></i> Add Habits\n          </button>\n        </div>\n      </div>\n\n      {/* modal for add habit form */}\n      <div\n        className=\"modal fade\"\n        id=\"staticBackdrop\"\n        data-bs-backdrop=\"static\"\n        data-bs-keyboard=\"false\"\n        tabIndex=\"-1\"\n        aria-labelledby=\"staticBackdropLabel\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog modal-dialog-centered\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h4 className=\"modal-title\" id=\"staticBackdropLabel\">\n                New Habit\n              </h4>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"mb-3\">\n                <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\n                  Name\n                </label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"habitName\"\n                  placeholder=\"Enter habit name\"\n                  autoComplete=\"off\"\n                />\n              </div>\n            </div>\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-bs-dismiss=\"modal\"\n              >\n                Cancel\n              </button>\n              <button type=\"button\" className=\"btn btn-primary\" onClick={handleSave}>\n                Save\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Navbar;\n","import React from 'react'\nimport Habits from './Habits'\nimport Navbar from './Navbar'\n\nconst Home = () => {\n  return (\n    <>\n      <Navbar name=\"Detail View\"/>\n      <Habits/>\n    </>\n  )\n}\n\nexport default Home\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { habitDone, habitNone, habitUnDone } from \"../redux/features/habitSlice\";\n\nconst DayView = ({day}) => {\n  // get today date\n  const today=new Date();\n  // get day from today date\n  const todayDay=today.getDay();\n\n  // call use dispatch hook a variable call dispatch\n  const dispatch=useDispatch();\n\n  // get date details from providing date\n  const date=new Date(day.yyyy,day.mm,day.dd);\n\n  // function call after click done icon--------------\n  const markToDone=()=>{\n    if(day.id>todayDay){\n      alert(\"You cannot change your next days status\")\n      return;\n    }\n    // call habit done action from reducer\n    dispatch(habitDone(day.id));\n  }\n  // -------------------------------------------------\n\n  // function call after click undone icon------------\n  const markToUnDone=()=>{\n    if(day.id>todayDay){\n      alert(\"You cannot change your next days status\")\n      return;\n    }\n    // call habit undone action from reducer\n    dispatch(habitUnDone(day.id))\n  }\n  // --------------------------------------------------\n\n  // function call after click none icon--------------\n  const markToNone=()=>{\n    if(day.id>todayDay){\n      alert(\"You cannot change your next days status\")\n      return;\n    }\n    // call habit none action from reducer\n    dispatch(habitNone(day.id));\n  }\n  // -------------------------------------------------\n\n\n  return (\n    <div className=\"day-container\">\n      <h5 className=\"text-center\">{day.day}</h5>\n      <p className=\"text-center\">{date.getDate()}/{date.getMonth()+1}/{date.getFullYear()}</p>\n      <i className={day.isDone===true?\"fa-solid fa-circle-check circle-icon active\":\"fa-solid fa-circle-check circle-icon\"} onClick={markToDone}></i>\n      <i className={day.isDone===false?\"fa-solid fa-circle-xmark circle-icon active\":\"fa-solid fa-circle-xmark circle-icon\"} onClick={markToUnDone}></i>\n      <i className={day.isDone===\"\"?\"fa-solid fa-circle-minus circle-icon active\":\"fa-solid fa-circle-minus circle-icon\"} onClick={markToNone}></i>\n    </div>\n  );\n};\n\nexport default DayView;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport DayView from \"./DayView\";\nimport Navbar from \"./Navbar\";\nimport { useSelector } from \"react-redux\";\n\nconst WeekView = () => {\n  // call use selector hook for getting state from reducer\n  let habitsState=useSelector((state)=>state.habits);\n  \n  // getting habit from habits state according to local storage id and set it on habit\n  let habit={}\n  for(let i=0;i<habitsState.length;i++){\n    if(habitsState[i].id===Number(localStorage.getItem(\"id\"))){\n      habit=habitsState[i];\n    }\n  }\n  \n  return (\n    <>\n      <Navbar name=\"Week View\" />\n      <h1 className=\"habit-center\" style={{textTransform:\"capitalize\"}}>{habit.name}</h1>\n      <div className=\"days-container\">\n        {habit.weekLog.map((day,index)=><DayView day={day} key={index}/>)}\n      </div>\n      <div className=\"d-grid gap-2 col-6 mx-auto mt-5\">\n        <button className=\"btn btn-primary\" type=\"button\">\n          <Link to=\"/\">Back to Detail View</Link>\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default WeekView;\n","import React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport WeekView from \"./WeekView\";\n\nconst App = () => {\n  \n  \n  return (\n    <>\n    <Routes>\n      <Route path=\"/\" element={<Home/>}/>\n      <Route path=\"/week-view\" element={<WeekView/>}/>\n    </Routes>\n    </>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport habitReducer from './features/habitSlice'\n\nconst store=configureStore({\n  reducer: {\n    habits: habitReducer,\n  },\n});\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}